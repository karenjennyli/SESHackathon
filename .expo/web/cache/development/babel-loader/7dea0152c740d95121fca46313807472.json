{"ast":null,"code":"\"use strict\";\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _assertThisInitialized = require(\"@babel/runtime/helpers/assertThisInitialized\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _jsxFileName = \"/Users/erica/Documents/Carnegie Mellon University/Opportunities/SES/SESHackathon-2/node_modules/react-native-bouncy-checkbox/build/dist/BouncyCheckbox.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar React = tslib_1.__importStar(require(\"react\"));\n\nvar react_native_1 = require(\"react-native-web/dist/index\");\n\nvar BouncyCheckbox_style_1 = tslib_1.__importStar(require(\"./BouncyCheckbox.style\"));\n\nvar defaultCheckImage = require(\"./check.png\");\n\nvar BouncyCheckbox = function (_React$Component) {\n  _inherits(BouncyCheckbox, _React$Component);\n\n  var _super = _createSuper(BouncyCheckbox);\n\n  function BouncyCheckbox(props) {\n    var _this;\n\n    _classCallCheck(this, BouncyCheckbox);\n\n    _this = _super.call(this, props);\n\n    _this.onPress = function () {\n      var _this$props = _this.props,\n          _this$props$disableBu = _this$props.disableBuiltInState,\n          disableBuiltInState = _this$props$disableBu === void 0 ? false : _this$props$disableBu,\n          _this$props$useNative = _this$props.useNativeDriver,\n          useNativeDriver = _this$props$useNative === void 0 ? true : _this$props$useNative,\n          _this$props$bounceEff = _this$props.bounceEffect,\n          bounceEffect = _this$props$bounceEff === void 0 ? 1 : _this$props$bounceEff,\n          _this$props$bounceFri = _this$props.bounceFriction,\n          bounceFriction = _this$props$bounceFri === void 0 ? 3 : _this$props$bounceFri;\n      var _this$state = _this.state,\n          checked = _this$state.checked,\n          springValue = _this$state.springValue;\n\n      if (!disableBuiltInState) {\n        _this.setState({\n          checked: !checked\n        }, function () {\n          springValue.setValue(0.7);\n          react_native_1.Animated.spring(springValue, {\n            toValue: bounceEffect,\n            friction: bounceFriction,\n            useNativeDriver: useNativeDriver\n          }).start();\n          _this.props.onPress && _this.props.onPress(_this.state.checked);\n        });\n      } else {\n        springValue.setValue(0.7);\n        react_native_1.Animated.spring(springValue, {\n          toValue: bounceEffect,\n          friction: bounceFriction,\n          useNativeDriver: useNativeDriver\n        }).start();\n        _this.props.onPress && _this.props.onPress();\n      }\n    };\n\n    _this.renderCheckIcon = function () {\n      var _this$state2 = _this.state,\n          checked = _this$state2.checked,\n          springValue = _this$state2.springValue;\n      var _this$props2 = _this.props,\n          _this$props2$size = _this$props2.size,\n          size = _this$props2$size === void 0 ? 25 : _this$props2$size,\n          iconStyle = _this$props2.iconStyle,\n          iconComponent = _this$props2.iconComponent,\n          iconImageStyle = _this$props2.iconImageStyle,\n          _this$props2$fillColo = _this$props2.fillColor,\n          fillColor = _this$props2$fillColo === void 0 ? \"#ffc484\" : _this$props2$fillColo,\n          _this$props2$ImageCom = _this$props2.ImageComponent,\n          ImageComponent = _this$props2$ImageCom === void 0 ? react_native_1.Image : _this$props2$ImageCom,\n          _this$props2$unfillCo = _this$props2.unfillColor,\n          unfillColor = _this$props2$unfillCo === void 0 ? \"transparent\" : _this$props2$unfillCo,\n          disableBuiltInState = _this$props2.disableBuiltInState,\n          isChecked = _this$props2.isChecked,\n          _this$props2$checkIco = _this$props2.checkIconImageSource,\n          checkIconImageSource = _this$props2$checkIco === void 0 ? defaultCheckImage : _this$props2$checkIco;\n      var checkStatus = disableBuiltInState ? isChecked : checked;\n      return React.createElement(react_native_1.Animated.View, {\n        style: [{\n          transform: [{\n            scale: springValue\n          }]\n        }, BouncyCheckbox_style_1._iconContainer(size, checkStatus, fillColor, unfillColor), iconStyle],\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }\n      }, iconComponent || checkStatus && React.createElement(ImageComponent, {\n        source: checkIconImageSource,\n        style: [BouncyCheckbox_style_1.default.iconImageStyle, iconImageStyle],\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 38\n        }\n      }));\n    };\n\n    _this.renderCheckboxText = function () {\n      var _this$props3 = _this.props,\n          text = _this$props3.text,\n          isChecked = _this$props3.isChecked,\n          textStyle = _this$props3.textStyle,\n          textContainerStyle = _this$props3.textContainerStyle,\n          disableBuiltInState = _this$props3.disableBuiltInState,\n          _this$props3$disableT = _this$props3.disableText,\n          disableText = _this$props3$disableT === void 0 ? false : _this$props3$disableT;\n      var checked = _this.state.checked;\n      return !disableText && React.createElement(react_native_1.View, {\n        style: [BouncyCheckbox_style_1.default.textContainer, textContainerStyle],\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 38\n        }\n      }, React.createElement(react_native_1.Text, {\n        style: [BouncyCheckbox_style_1._textStyle(disableBuiltInState ? isChecked : checked), textStyle],\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }\n      }, text));\n    };\n\n    _this.state = {\n      checked: false,\n      springValue: new react_native_1.Animated.Value(1)\n    };\n    return _this;\n  }\n\n  _createClass(BouncyCheckbox, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        checked: this.props.isChecked || false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var style = this.props.style;\n      return React.createElement(react_native_1.TouchableOpacity, _extends({}, this.props, {\n        style: [BouncyCheckbox_style_1.default.container, style],\n        onPress: this.onPress.bind(this, react_native_1.Easing.bounce),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }\n      }), this.renderCheckIcon(), this.renderCheckboxText());\n    }\n  }]);\n\n  return BouncyCheckbox;\n}(React.Component);\n\nexports.default = BouncyCheckbox;","map":{"version":3,"sources":["../../lib/BouncyCheckbox.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst react_native_1 = require(\"react-native\");\nconst BouncyCheckbox_style_1 = tslib_1.__importStar(require(\"./BouncyCheckbox.style\"));\nconst defaultCheckImage = require(\"./check.png\");\nclass BouncyCheckbox extends React.Component {\n    constructor(props) {\n        super(props);\n        this.onPress = () => {\n            const { disableBuiltInState = false, useNativeDriver = true, bounceEffect = 1, bounceFriction = 3, } = this.props;\n            const { checked, springValue } = this.state;\n            if (!disableBuiltInState) {\n                this.setState({ checked: !checked }, () => {\n                    springValue.setValue(0.7);\n                    react_native_1.Animated.spring(springValue, {\n                        toValue: bounceEffect,\n                        friction: bounceFriction,\n                        useNativeDriver,\n                    }).start();\n                    this.props.onPress && this.props.onPress(this.state.checked);\n                });\n            }\n            else {\n                springValue.setValue(0.7);\n                react_native_1.Animated.spring(springValue, {\n                    toValue: bounceEffect,\n                    friction: bounceFriction,\n                    useNativeDriver,\n                }).start();\n                this.props.onPress && this.props.onPress();\n            }\n        };\n        this.renderCheckIcon = () => {\n            const { checked, springValue } = this.state;\n            const { size = 25, iconStyle, iconComponent, iconImageStyle, fillColor = \"#ffc484\", ImageComponent = react_native_1.Image, unfillColor = \"transparent\", disableBuiltInState, isChecked, checkIconImageSource = defaultCheckImage, } = this.props;\n            const checkStatus = disableBuiltInState ? isChecked : checked;\n            return (<react_native_1.Animated.View style={[\n                    { transform: [{ scale: springValue }] },\n                    BouncyCheckbox_style_1._iconContainer(size, checkStatus, fillColor, unfillColor),\n                    iconStyle,\n                ]}>\n        {iconComponent ||\n                    (checkStatus && (<ImageComponent source={checkIconImageSource} style={[BouncyCheckbox_style_1.default.iconImageStyle, iconImageStyle]}/>))}\n      </react_native_1.Animated.View>);\n        };\n        this.renderCheckboxText = () => {\n            const { text, isChecked, textStyle, textContainerStyle, disableBuiltInState, disableText = false, } = this.props;\n            const { checked } = this.state;\n            return (!disableText && (<react_native_1.View style={[BouncyCheckbox_style_1.default.textContainer, textContainerStyle]}>\n          <react_native_1.Text style={[\n                    BouncyCheckbox_style_1._textStyle(disableBuiltInState ? isChecked : checked),\n                    textStyle,\n                ]}>\n            {text}\n          </react_native_1.Text>\n        </react_native_1.View>));\n        };\n        this.state = {\n            checked: false,\n            springValue: new react_native_1.Animated.Value(1),\n        };\n    }\n    componentDidMount() {\n        this.setState({ checked: this.props.isChecked || false });\n    }\n    render() {\n        const { style } = this.props;\n        return (<react_native_1.TouchableOpacity {...this.props} style={[BouncyCheckbox_style_1.default.container, style]} onPress={this.onPress.bind(this, react_native_1.Easing.bounce)}>\n        {this.renderCheckIcon()}\n        {this.renderCheckboxText()}\n      </react_native_1.TouchableOpacity>);\n    }\n}\nexports.default = BouncyCheckbox;\n//# sourceMappingURL=BouncyCheckbox.js.map"]},"metadata":{},"sourceType":"script"}